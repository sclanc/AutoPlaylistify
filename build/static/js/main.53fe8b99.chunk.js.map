{"version":3,"sources":["components/Header.js","images/s.png","images/sliders.png","images/gencard.png","components/Splash.js","components/MaterialSlider.js","app-utils.js","components/MaterialAutoComplete.js","Generator.js","components/NewGenerator.js","components/Tracks.js","components/GeneratorCard.js","components/Search.js","components/MainView.js","components/Discover.js","components/Reports.js","App.js","index.js"],"names":["Header","user","AppBar","position","to","Typography","variant","component","color","className","Avatar","src","images","url","href","Splash","hide","style","backgroundImage","soundwave","sliders","alt","paddingTop","paddingBottom","gencard","MaterialSlider","marks","step","title","description","value","getAriaValueText","onChange","valueLabelDisplay","valueLabelFormat","min","max","required","classes","makeStyles","root","width","display","flexDirection","right","paddingRight","useStyles","Tooltip","id","Button","size","onClick","Slider","aria-labelledby","getUser","at","rt","fetch","headers","then","res","status","json","response","data","console","log","catch","e","error","PopulateSpotifyAutoComplete","type","q","market","Authorization","getGenres","formToGenerator","artists","tracks","genres","name","limit","acousticness","danceability","duration","energy","instrumentalness","key","liveness","loudness","mode","popularity","speechiness","tempo","timeSig","valence","user_id","RequestParams","seed_artists","seed_tracks","seed_genres","toString","min_danceability","max_danceability","target_danceability","min_duration_ms","max_duration_ms","target_duration_ms","min_energy","max_energy","target_energy","min_instrumentalness","max_instrumentalness","target_instrumentalness","min_key","max_key","target_key","min_liveness","max_liveness","target_liveness","min_popularity","max_popularity","target_popularity","min_speechiness","max_speechiness","target_speechiness","min_tempo","max_tempo","target_tempo","min_timeSignature","max_timeSignature","target_timeSignature","min_valence","max_valence","target_valence","min_acousticness","max_acousticness","target_acousticness","min_loudness","max_loudness","target_loudness","min_mode","max_mode","MaterialAutoComplete","label","setError","useState","setValue","options","setOptions","debounceId","setDebounceId","handleChange","target","clearTimeout","setTimeout","length","getOptions","a","message","items","Autocomplete","v","freeSolo","getOptionLabel","option","map","artist","renderInput","params","TextField","margin","Generator","this","playlist","JSON","parse","undefined","track","format","lim","stringify","replace","formData","scaling","split","NewGenerator","exisitingGenerator","fetchGenerators","closeSelf","setArtists","setTracks","setGenres","setName","setLimit","setacousticness","setDanceability","setDuration","setEnergy","setInstrumentalness","setKey","setLiveness","setLoudness","setMode","setPopularity","setSpeechiness","setTempo","setTimeSig","setValence","useEffect","toFormData","addSeeds","seed","i","s","indexOf","getSeedIndex","makeChips","item","Chip","onDelete","newArtists","filter","newTracks","newGenres","deleteSeed","saveGenerator","country","gen","method","cache","credentials","redirect","referrerPolicy","body","postBody","success","Divider","marginTop","Tracks","saveToSpotify","getTracks","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","IconButton","aria-label","flex","disabled","is_playable","launchPlayer","album","explicit","duration_ms","renderTrack","maxWidth","media","height","GeneratorCard","removeGenerator","generator","edit","discover","artwork","setArtwork","featuredArtists","setFeatured","showTracks","setShowTracks","run","getArtwork","toggleModal","prev","art","uris","uri","renderArt","backgroundSize","backgroundColor","Card","CardActionArea","CardMedia","CardContent","gutterBottom","CardActions","Fragment","Modal","open","onBackdropClick","Search","onKeyUp","InputBase","placeholder","inputProps","MainView","showNew","setShowNew","showSuccess","setShowSuccess","generators","setGenerators","genToEdit","setGenToEdit","g","push","generatorCards","NewGen","React","forwardRef","props","ref","Fab","Snackbar","autoHideDuration","onClose","elevation","severity","Discover","fullWidth","Reports","report","setReport","table","minWidth","getReports","reportData","repo","r","getrr","renderedReport","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","Object","entries","row","scope","generatorName","time","CircularProgress","theme","createMuiTheme","palette","primary","main","secondary","background","default","paper","text","Alert","App","setUser","setAt","setRt","showError","setShowError","fetchUser","access_token","refresh_token","urlParams","URLSearchParams","window","location","pathname","get","handleClose","event","reason","CssBaseline","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53fe8b99.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({\n    user\n}) => (\n    <AppBar position='static'>\n\t\t<Link to=\"/\">\n\t\t\t<Typography variant=\"h2\" component=\"h2\" color=\"textPrimary\">\n\t\t\t\tAutoplaylistify\n\t\t\t</Typography>\n\t\t</Link>\n        {!user ? (\n        <div>\n            <a href=\"http://www.autoplaylistify.com/login\">\n                <Typography variant=\"h4\" component=\"h2\" color=\"textPrimary\">\n                    Login\n                </Typography>\n            </a>\n        </div>\n\n        ) : (\n\t\t\t<div className=\"Header__items\">\n\t\t\t\t<Link to=\"/Discover\">\n\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\" color=\"textPrimary\">\n\t\t\t\t\t\tDiscover\n\t\t\t\t\t</Typography>\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/Reporting\">\n\t\t\t\t\t<Typography variant=\"h4\" component=\"h2\" color=\"textPrimary\">\n\t\t\t\t\t\tReporting\n\t\t\t\t\t</Typography>\n\t\t\t\t</Link>\n\t\t\t\t<Avatar src={user.images[0].url} />\n\t\t\t</div>\n        )}\n        \n    </AppBar>\n);\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/s.42d38ce3.png\";","export default __webpack_public_path__ + \"static/media/sliders.807deed7.png\";","export default __webpack_public_path__ + \"static/media/gencard.402fc7a3.png\";","import React from 'react'\nimport { Typography } from '@material-ui/core';\nimport soundwave from './../images/s.png';\nimport sliders from './../images/sliders.png';\nimport gencard from './../images/gencard.png';\n\nconst Splash = ({\n    hide\n}) => {\n    if (hide) return null;\n    return (\n        <div className=\"Splash\">\n            <div className=\"Splash__item\">\n                <div className=\"first\" style={{backgroundImage: `url(${soundwave})`}}>\n                    <Typography variant=\"h3\" component=\"h2\" color=\"textPrimary\">\n                        Harness the power of Spotify's Recomendations System to discover new music your way!\n                    </Typography>\n                </div>   \n            </div>\n            <div className=\"Splash__item\">\n                <img className=\"Splash__image\" src={sliders} alt=\"sliders\"/>\n                <div className=\"Splash__item-text\">\n                    <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\">\n                        Perfect your recomendations, by optomizing for anything from popularity, and dancability, to tempo, time signature, and much more. \n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\" style={{paddingTop: '60px'}}>\n                            Save your recomendation preferences, and use them to create playlists. You can even save them to your spotify account!\n                    </Typography>\n                </div>\n            </div>\n            <div className=\"Splash__item\" style={{paddingBottom: '10px'}}>\n                <div>\n                    <div className=\"Splash__item-text\">\n                        <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\">\n                        Create a daily, weekly or monthly refresh schedule for your playlists, so you can keep your music fresh.\n                        </Typography>\n                    </div>\n                    <div className=\"Splash__item-text\" style={{paddingTop: '60px'}}>\n                        <Typography variant=\"h5\" component=\"h2\" color=\"textPrimary\">\n                            Log in with your Spotify account to get Started.\n                        </Typography>\n                    </div>\n                </div>\n                <img className=\"Splash__image\" src={gencard} alt=\"generator card\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Splash;","import { Typography, Tooltip, Slider, Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst MaterialSlider = ({ \n    marks,\n    step,\n    title,\n    description,\n    value,\n    getAriaValueText, \n    onChange,\n    valueLabelDisplay,\n    valueLabelFormat,\n    min,\n    max,\n    required\n}) => {\n  const useStyles = makeStyles({\n    root: {\n      width: 650,\n      paddingTop: 20\n    },\n    title: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    right: {\n      paddingTop: 3.5,\n      paddingRight: 10\n    }\n\n  });\n  const classes = useStyles();\n  return (\n    <div className={classes.root} >\n      <div className={classes.title}>\n        <Tooltip title={description}>\n          <Typography className={classes.right} id=\"range-slider\" color=\"textPrimary\" >\n              {title}\n          </Typography>\n        </Tooltip>\n        { !required && value[0] !== null &&\n          <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size='small'\n          onClick={() => onChange(null, [null, null])}\n          >\n              clear\n          </Button>\n        }\n      </div>\n      <Slider\n        value={value}\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={getAriaValueText}\n        marks={marks}\n        step={step}\n        onChange={onChange}\n        valueLabelDisplay={valueLabelDisplay}\n        valueLabelFormat={valueLabelFormat}\n        min={min}\n        max={max}\n      />\n    </div>\n);}\n\nexport default MaterialSlider;","export const getUser = (at,rt) => (\n    fetch('https://api.spotify.com/v1/me',{ headers: { 'Authorization': 'Bearer ' + at } })\n    .then((res) => {\n      if (res.status === 401) {\n        fetch(`http://www.autoplaylistify.com/refresh_token?refresh_token='${rt}'`)\n        .then(response => response.json())\n        .then(data => console.log('refresh: ', data))\n        .then(data => data)\n      } else {\n        let json = res.json();\n        return json;\n      }\n    })\n    .catch((e) => {\n      console.error(e)\n    })\n);\n\nexport const PopulateSpotifyAutoComplete = (type, at, q, market) => (\n  fetch(`https://api.spotify.com/v1/search?q=${q}&type=${type}&market=${market}&limit=${50}`,{\n    headers: {\n      Authorization: 'Bearer ' + at\n    }\n  }).then((response) => {\n    let json = response.json();\n    return json;\n  })\n  .catch((e) => {\n    console.error(e);\n  })\n);\n\nexport const getGenres = (at) => (\n  fetch('https://api.spotify.com/v1/recommendations/available-genre-seeds',{\n    headers: {\n      Authorization: 'Bearer ' + at\n    }\n  }).then((response) => {\n    let json = response.json();\n    return json;\n  })\n  .catch((e) => {\n    console.error(e);\n  })\n);\n\nexport const formToGenerator = ({artists,\n  tracks,\n  genres,\n  name,\n  limit,\n  acousticness,\n  danceability,\n  duration,\n  energy,\n  instrumentalness,\n  key,\n  liveness,\n  loudness,\n  mode,\n  popularity,\n  speechiness,\n  tempo,\n  timeSig,\n  valence,\n  market,\n  id,\n  user_id}) => {\n    const RequestParams = {};\n    RequestParams.limit = limit[0];\n    RequestParams.name = name;\n    RequestParams.market = market;\n\tif (id) {\n\t\tRequestParams.id = id;\n\t}\n    RequestParams.user_id = user_id;\n    RequestParams.seed_artists = artists;\n    RequestParams.seed_tracks = tracks;\n    RequestParams.seed_genres = genres.toString();\n    if (danceability[0]) {\n\t\t\n      if (danceability[0] !== danceability[1]) {\n        RequestParams.min_danceability = danceability[0] * .01;\n        RequestParams.max_danceability = danceability[1] * .01;\n      } else {\n        RequestParams.target_danceability = danceability[0] * .01;\n      }\n    }\n    if (duration[0]) {\n      if (duration[0] !== duration[1]) {\n        RequestParams.min_duration_ms = duration[0] * 6000;\n        RequestParams.max_duration_ms = duration[1] * 6000;\n      } else {\n        RequestParams.target_duration_ms = duration[0] * 6000;\n      }\n    }\n    if (energy[0]) {\n      if (energy[0] !== energy[1]) {\n        RequestParams.min_energy = energy[0] * .01;\n        RequestParams.max_energy = energy[1] * .01;\n      } else {\n        RequestParams.target_energy = energy[0] * .01;\n      }\n    }\n    if (instrumentalness[0]) {\n      if (instrumentalness[0] !== instrumentalness[1]) {\n        RequestParams.min_instrumentalness = instrumentalness[0] * .01;\n        RequestParams.max_instrumentalness = instrumentalness[1] * .01;\n      } else {\n        RequestParams.target_instrumentalness = instrumentalness[0] * .01;\n      }\n    }\n    if (key[0]) {\n      if (key[0] !== key[1]) {\n        RequestParams.min_key = key[0];\n        RequestParams.max_key = key[1]; \n      } else {\n        RequestParams.target_key = key[0];\n      }\n    }\n\n    if (liveness[0]) {\n      if (liveness[0] !== liveness[1]) {\n        RequestParams.min_liveness = liveness[0] * .01;\n        RequestParams.max_liveness = liveness[1] * .01;\n      } else {\n        RequestParams.target_liveness = liveness[0] * .01;\n      }\n    }\n    if (popularity[0]) {\n      if (popularity[0] !== popularity[1]) {\n        RequestParams.min_popularity = popularity[0];\n        RequestParams.max_popularity = popularity[1];\n      } else {\n        RequestParams.target_popularity = popularity[0];\n      }\n    }\n    if (speechiness[0]) {\n      if (speechiness[0] !== speechiness[1]) {\n        RequestParams.min_speechiness = speechiness[0] * .01;\n        RequestParams.max_speechiness = speechiness[1] * .01;\n      } else {\n        RequestParams.target_speechiness = speechiness[0] * .01;\n      }\n    }\n    if (tempo[0]) {\n      if (tempo[0] !== tempo[1]) {\n        RequestParams.min_tempo = tempo[0];\n        RequestParams.max_tempo = tempo[1];\n      } else {\n        RequestParams.target_tempo = tempo[0];\n      }\n    }\n    if (timeSig[0]) {\n      if (timeSig[0] !== timeSig[1]) {\n        RequestParams.min_timeSignature = timeSig[0];\n        RequestParams.max_timeSignature = timeSig[1];\n      } else {\n        RequestParams.target_timeSignature = timeSig[0];\n      }\n    }\n    if (valence[0]) {\n      if (valence[0] !== valence[1]) {\n        RequestParams.min_valence = valence[0] * .01;\n        RequestParams.max_valence = valence[1] * .01;\n      } else {\n        RequestParams.target_valence = valence[0] * .01;\n      }\n    }\n    if (acousticness[0]) {\n      if (acousticness[0] !== acousticness[1]) {\n        RequestParams.min_acousticness = acousticness[0] * .01;\n        RequestParams.max_acousticness = acousticness[1] * .01;\n      } else {\n        RequestParams.target_acousticness = acousticness[0] * .01;\n      }\n    }\n    if (loudness[0]) {\n      if (loudness[0] !== loudness[1]) {\n        RequestParams.min_loudness = loudness[0] * .01;\n        RequestParams.max_loudness = loudness[1] * .01;\n      } else {\n        RequestParams.target_loudness = loudness[0] * .01;\n      }\n    }\n\tif (mode) { //fix this\n\t\tRequestParams.min_mode = mode[0];\n\t\tRequestParams.max_mode = mode[1];\n\t}\n    return RequestParams;\n}\n\nexport const generatorToForm = (generator) => {\n\n}","/* eslint-disable no-use-before-define */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { PopulateSpotifyAutoComplete, getGenres } from '../app-utils'\n\nconst  MaterialAutoComplete = ({\n    onChange,\n    type,\n    at,\n    market,\n    label,\n    setError\n}) => {\n    const [value, setValue] = useState(null);\n    const [options, setOptions] = useState([]);\n    const [debounceId, setDebounceId] = useState(null);\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n        if (debounceId) {\n            clearTimeout(debounceId);\n        } \n        setDebounceId(setTimeout(() => {\n          if (e.target.value.length > 0) {\n            getOptions(e.target.value);\n          }\n        }, 1000));\n    }\n\n    const getOptions = async (q) => {\n        try {\n            let options = null;\n            if (type === 'genre') {\n              options = await getGenres(at);\n              if (options.error) {\n                throw(options.error.message)\n              }\n              if (options.genres) {\n                setOptions(options.genres);\n              }\n              return;\n            } \n            \n            options = await PopulateSpotifyAutoComplete(type, at, q, market);\n            if (options.error) {\n              throw(options.error.message)\n            }\n            if (options[type + 's']) {\n                setOptions(options[type + 's'].items);\n            }\n        } catch(e) {\n            console.error(e);\n            setError(e);\n        }\n    }\n\n    const getOptionLabel = (type) => {\n      switch(type) {\n        case 'artist': return (option) => option.name;\n        case 'genre': return (option) => option;\n        case 'track': return (option) => {\n          const artists = option.artists.map((artist) => artist.name);\n          return artists.length > 0 ? `${option.name} by ${artists.toString()}` : option.name;\n        }\n        default: return;\n      }\n    }\n\n  return (\n    <div style={{ width: 300 }}>\n      <Autocomplete\n        onChange={(e,v) => {\n            onChange(e,v);\n        }}\n        freeSolo\n        options={options}\n        getOptionLabel={getOptionLabel(type)}\n        renderInput={(params) => (\n          <TextField {...params} label={label} margin=\"normal\" variant=\"outlined\" value={value} onChange={handleChange} />\n        )}\n      />\n    </div>\n  );\n}\n\nexport default MaterialAutoComplete;","export default class Generator{\n    constructor({\n        seed_artists,\n        seed_genres,\n        seed_tracks,\n        name,\n        limit,\n        market,\n        min_danceability,\n        min_duration_ms,\n        min_energy,\n        min_instrumentalness,\n        min_key,\n        min_liveness,\n        min_popularity,\n        min_speechiness,\n        min_tempo,\n        min_timeSignature,\n        min_valence,\n        min_acousticness,\n        min_loudness,\n        min_mode,\n        max_danceability,\n        max_duration_ms,\n        max_energy,\n        max_instrumentalness,\n        max_key,\n        max_liveness,\n        max_popularity,\n        max_speechiness,\n        max_tempo,\n        max_timeSignature,\n        max_valence,\n        max_acousticness,\n        max_loudness,\n        max_mode,\n        target_danceability,\n        target_duration_ms,\n        target_energy,\n        target_instrumentalness,\n        target_liveness,\n        target_popularity,\n        target_speechiness,\n        target_tempo,\n        target_timeSignature,\n        target_valence,\n        target_acousticness,\n        target_loudness,\n        user_id,\n        id\n    }) {\n    this.playlist = null;\n    this.limit = limit;\n    this.name = name;\n    this.market = market;\n    this.seed_artists = typeof seed_artists === 'string' ? JSON.parse(seed_artists) : seed_artists;\n    this.seed_tracks = typeof seed_tracks === 'string' ? JSON.parse(seed_tracks) : seed_tracks;\n    this.seed_genres = seed_genres;\n    this.min_danceability = min_danceability;\n    this.min_duration_ms = min_duration_ms;\n    this.min_energy = min_energy;\n    this.min_instrumentalness = min_instrumentalness;\n    this.min_key = min_key;\n    this.min_liveness = min_liveness;\n    this.min_popularity = min_popularity;\n    this.min_speechiness = min_speechiness;\n    this.min_tempo = min_tempo;\n    this.min_timeSignature = min_timeSignature;\n    this.min_valence = min_valence;\n    this.min_acousticness = min_acousticness;\n    this.min_loudness = min_loudness;\n    this.min_mode = min_mode;\n    this.max_duration_ms = max_duration_ms;\n    this.max_energy = max_energy;\n    this.max_instrumentalness = max_instrumentalness;\n    this.max_key = max_key;\n    this.max_liveness = max_liveness;\n    this.max_danceability = max_danceability;\n    this.max_popularity = max_popularity;\n    this.max_speechiness = max_speechiness;\n    this.max_tempo = max_tempo;\n    this.max_timeSignature = max_timeSignature;\n    this.max_valence = max_valence;\n    this.max_acousticness = max_acousticness;\n    this.max_loudness = max_loudness;\n    this.max_mode = max_mode;\n    this.target_duration_ms = target_duration_ms;\n    this.target_energy = target_energy;\n    this.target_instrumentalness = target_instrumentalness;\n    this.target_liveness = target_liveness;\n    this.target_danceability = target_danceability;\n    this.target_popularity = target_popularity;\n    this.target_speechiness = target_speechiness;\n    this.target_tempo = target_tempo;\n    this.target_timeSignature = target_timeSignature;\n    this.target_valence = target_valence;\n    this.target_acousticness = target_acousticness;\n    this.target_loudness = target_loudness;\n    this.user_id = user_id; \n    this.id = id;\n    }\n\n    format(type) {\n        if(this[type] !== undefined && this[type] !== null) {\n            switch(type) {\n                case 'seed_artists':  {\n                    const artists = this.seed_artists.map(artist => artist.id).toString(); \n                    return `&${type}=${artists}`;\n                }\n                case 'seed_tracks': {\n                    const tracks = this.seed_tracks.map(track => track.id).toString();\n                    return `&${type}=${tracks}`;\n                }\n                default: return `&${type}=${this[type]}`\n            }\n        }\n        return '';\n    }\n\n    async run(at, setError) {\n        if (!at) return;\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/recommendations?\n${this.format('limit')}\n${this.format('market')}\n${this.format('seed_artists')}\n${this.format('seed_tracks')}\n${this.format('seed_genres')}\n${this.format('min_duration_ms')}\n${this.format('min_energy')}\n${this.format('min_instrumentalness')}\n${this.format('min_key')}\n${this.format('min_liveness')}\n${this.format('min_danceability')}\n${this.format('min_popularity')}\n${this.format('min_speechiness')}\n${this.format('min_tempo')}\n${this.format('min_timeSignature')}\n${this.format('min_valence')}\n${this.format('min_acousticness')}\n${this.format('min_loudness')}\n${this.format('min_mode')}\n${this.format('max_duration_ms')}\n${this.format('max_energy')}\n${this.format('max_instrumentalness')}\n${this.format('max_key')}\n${this.format('max_liveness')}\n${this.format('max_danceability')}\n${this.format('max_popularity')}\n${this.format('max_speechiness')}\n${this.format('max_tempo')}\n${this.format('max_timeSignature')}\n${this.format('max_valence')}\n${this.format('max_acousticness')}\n${this.format('max_loudness')}\n${this.format('max_mode')}\n${this.format('target_duration_ms')}\n${this.format('target_energy')}\n${this.format('target_instrumentalness')}\n${this.format('target_liveness')}\n${this.format('target_danceability')}\n${this.format('target_popularity')}\n${this.format('target_speechiness')}\n${this.format('target_tempo')}\n${this.format('target_timeSignature')}\n${this.format('target_valence')}\n${this.format('target_acousticness')}\n${this.format('target_loudness')}`, {\n                headers: {\n                    Authorization: 'Bearer ' + at\n                }\n            }).then((response) => response.json());\n            \n            if (response.error) {\n                throw(response.error);\n            } else {\n                this.playlist = response.tracks;\n                return this.playlist;\n            }\n            \n        } catch (e) {\n            if (setError) {\n                setError(e);\n            } else {\n                throw(e);\n            }\n        }\n    }\n\n    postBody() {\n        return {\n            id: this.id,\n            user_id: this.user_id,\n            lim: this.limit, \n            name: this.name, \n            market: this.market, \n            seed_artists: JSON.stringify(this.seed_artists).replace(`'`, `\\\\'`),\n            seed_tracks: JSON.stringify(this.seed_tracks).replace(`'`, `\\\\'`),\n            seed_genres: this.seed_genres,\n            min_danceability: this.min_danceability, \n            min_duration_ms: this.min_duration_ms, \n            min_energy: this.min_energy, \n            min_instrumentalness: this.min_instrumentalness, \n            min_key: this.min_key, \n            min_liveness: this.min_liveness, \n            min_popularity: this.min_popularity, \n            min_speechiness: this.min_speechiness, \n            min_tempo: this.min_tempo, \n            min_timeSignature: this.min_timeSignature, \n            min_valence: this.min_valence, \n            min_acousticness: this.min_acousticness, \n            min_loudness: this.min_loudness, \n            min_mode: this.min_mode, \n            max_duration_ms: this.max_duration_ms, \n            max_energy: this.max_energy, \n            max_instrumentalness: this.max_instrumentalness, \n            max_key: this.max_key, \n            max_liveness: this.max_liveness, \n            max_danceability: this.max_danceability, \n            max_popularity: this.max_popularity, \n            max_speechiness: this.max_speechiness, \n            max_tempo: this.max_tempo, \n            max_timeSignature: this.max_timeSignature, \n            max_valence: this.max_valence, \n            max_acousticness: this.max_acousticness, \n            max_loudness: this.max_loudness, \n            max_mode: this.max_mode, \n            target_duration_ms: this.target_duration_ms, \n            target_energy: this.target_energy, \n            target_instrumentalness: this.target_instrumentalness, \n            target_liveness: this.target_liveness, \n            target_danceability: this.target_danceability, \n            target_popularity: this.target_popularity, \n            target_speechiness: this.target_speechiness, \n            target_tempo: this.target_tempo, \n            target_key: this.target_key,\n            target_timeSignature: this.target_timeSignature, \n            target_valence: this.target_valence, \n            target_acousticness: this.target_acousticness, \n            target_loudness: this.target_loudness, \n        }\n    }\n\n    toFormData() {\n        const formData = {};\n        const scaling = (key) => {\n            if (this[`target_${key}`]) {\n                return [this[`target_${key}`], this[`target_${key}`]];\n            } else if (this[`min_${key}`]) {\n                return [this[`min_${key}`] * 100, this[`max_${key}`] * 100];\n            } else {\n                return [null,null];\n            }\n        } \n        formData.artists = this.seed_artists;\n        formData.tracks = this.seed_tracks;\n        formData.genres = this.seed_genres.split(',');\n        formData.name = this.name;\n        formData.limit = [this.limit || 20];\n        formData.danceability = scaling('danceability'); \n        formData.acousticness = scaling('acousticness'); \n        formData.danceability = scaling('danceability'); \n        formData.duration = scaling('duration'); \n        formData.energy = scaling('energy'); \n        formData.instrumentalness = scaling('instrumentalness'); \n        formData.key = scaling('key'); \n        formData.liveness = scaling('liveness'); \n        formData.loudness = scaling('loudness'); \n        formData.mode = scaling('mode'); \n        formData.popularity = scaling('popularity'); \n        formData.speechiness = scaling('speechiness'); \n        formData.tempo = scaling('tempo'); \n        formData.timeSig = scaling('timeSig'); \n        formData.valence = scaling('valence'); \n        return formData;\n    }\n}\n","  import React, {useEffect, useState} from 'react';\n  import MaterialSlider from './MaterialSlider';\n  import MaterialAutoComplete from './MaterialAutoComplete';\n  import { Divider, Typography, TextField, Button, Chip, Tooltip } from '@material-ui/core';\n  import Generator from '../Generator';\n  import { formToGenerator } from '../app-utils'\n\n  const NewGenerator = ({\n      exisitingGenerator,\n      at,\n      user,\n      setError,\n      fetchGenerators,\n      closeSelf\n  }) => {\n    const [artists, setArtists] = useState([]);\n    const [tracks, setTracks] = useState([]);\n    const [genres, setGenres] = useState([]);\n    const [name, setName] = useState('');\n    const [limit, setLimit] = useState([20]);\n    const [acousticness, setacousticness] = useState([null, null]);\n    const [danceability, setDanceability] = useState([null,null]);\n    const [duration, setDuration] = useState([null,null]);\n    const [energy, setEnergy] = useState([null,null]);\n    const [instrumentalness, setInstrumentalness] = useState([null,null]);\n    const [key, setKey] = useState([null,null]);\n    const [liveness, setLiveness] = useState([null,null]);\n    const [loudness, setLoudness] = useState([null,null]);\n    const [mode, setMode] = useState([0,1]);\n    const [popularity, setPopularity] = useState([null,null]);\n    const [speechiness, setSpeechiness] = useState([null,null]);\n    const [tempo, setTempo] = useState([null,null]);\n    const [timeSig, setTimeSig] = useState([null,null]);\n    const [valence, setValence] = useState([null,null]);\n\n    useEffect(() => {\n        if(exisitingGenerator) {\n\t\t\tconst {\n\t\t\t\tartists,\n\t\t\t\ttracks,\n\t\t\t\tgenres,\n\t\t\t\tname,\n\t\t\t\tlimit,\n\t\t\t\tacousticness,\n\t\t\t\tdanceability,\n\t\t\t\tduration,\n\t\t\t\tenergy,\n\t\t\t\tinstrumentalness,\n\t\t\t\tkey,\n\t\t\t\tliveness,\n\t\t\t\tloudness,\n\t\t\t\tmode,\n\t\t\t\tpopularity,\n\t\t\t\tspeechiness,\n\t\t\t\ttempo,\n\t\t\t\ttimeSig,\n\t\t\t\tvalence,\n\t\t\t}  = exisitingGenerator.toFormData();\n           setArtists(artists);\n           setTracks(tracks);\n           setGenres(genres);\n           setName(name);\n           setLimit(limit);\n           setacousticness(acousticness);\n           setDanceability(danceability);\n           setDuration(duration);\n           setEnergy(energy);\n           setInstrumentalness(instrumentalness);\n           setKey(key);\n           setLiveness(liveness);\n           setLoudness(loudness);\n           setMode(mode);\n           setPopularity(popularity);\n           setSpeechiness(speechiness);\n           setTempo(tempo);\n           setTimeSig(timeSig);\n           setValence(valence);\n        }\n    }, [exisitingGenerator])\n\n    const getSeedIndex = (seed, type) => {\n        switch(type) {\n            case 'artist': return artists.map(s => s.id).indexOf(seed.id);\n            case 'track': return tracks.map(s => s.id).indexOf(seed.id);\n            case 'genre': return genres.indexOf(seed);\n            default: return -1;\n        }\n    }\n\n    const addSeeds = (seed, type) => {\n        const i = getSeedIndex(seed, type);\n\t\tconst totalSeeds = artists.length + genres.length + tracks.length;\n\t\tif (totalSeeds + 1 > 5) {\n\t\t\tsetError('Cannot exceed 5 seed Artist(s), Genre(s), or Track(s)');\n\t\t\treturn;\n\t\t}\n        switch(type) {\n            case 'artist': \n                if (i >= 0) return; \n                setArtists((artists) => [...artists, seed]); \n                break;\n            case 'track':\n                if (i >= 0) return;\n                setTracks((tracks) => [...tracks, seed]);\n                break;\n            case 'genre':\n                if (i >= 0) return;\n                setGenres((genres) => [...genres, seed]);\n                break;\n            default: return;\n        }\n    }\n\n    const deleteSeed = (seed, type) => {\n        switch (type) {\n            case 'artist': \n                const newArtists = artists.filter((item) => item.id !== seed.id);\n                setArtists(newArtists);\n                break;\n            case 'track':\n                const newTracks = tracks.filter((item) => item.id !== seed.id);\n                setTracks(newTracks);\n                break;\n            case 'genre':\n                const newGenres = genres.filter((item) => item !== seed);\n                setGenres(newGenres);\n                break;\n            default: return;\n        }\n    }\n\n    const makeChips = (items, type) => items.map(item => (\n        <Chip\n            key={item.id}\n            label={item.name ? item.name : item}\n            onDelete={() => deleteSeed(item, type)}\n        />\n    ));\n\n    const formIsValid = () => {\n        return name.length > 0 && artists.length + tracks.length + genres.length > 0;\n    }\n\n    const saveGenerator = async () => {\n        const market = user.country;\n        const user_id = user.id;\n        const gen = new Generator(formToGenerator({\n\t\t\tid: exisitingGenerator ? exisitingGenerator.id : null,\n            artists,\n            tracks,\n            genres,\n            name,\n            limit,\n            acousticness,\n            danceability,\n            duration,\n            energy,\n            instrumentalness,\n            key,\n            liveness,\n            loudness,\n            mode,\n            popularity,\n            speechiness,\n            tempo,\n            timeSig,\n            valence,\n            market,\n            user_id\n        }));\n        try {\n            const res = await fetch('http://www.autoplaylistify.com/generator', {\n                method: 'POST',\n                cache: 'no-cache',\n                credentials: 'same-origin',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                redirect: 'follow',\n                referrerPolicy: 'no-referrer',\n                body: JSON.stringify(gen.postBody())\n              }).then(res => res.json()); \n\n              if (res.success) {\n                fetchGenerators();\n              } else {\n                  throw res.error;\n              }\n            closeSelf();     \n        } catch(e) {\n            if (e.message) {\n                setError(e.message);\n            }\n        }\n    }\n\n    return (\n        <div className=\"NewGen__modal\">\n            <div className=\"NewGen__container\">\n                <Typography variant=\"h2\" component=\"h2\" color=\"textSecondary\" style={{paddingBottom: '20px'}}>Playlist Details</Typography>\n                <Typography variant=\"h6\" component=\"div\" color=\"textSecondary\">Required Information (1-5 seed artists, tracks, or genres)</Typography>\n                <div className=\"NewGen__required\">\n                    <div className=\"NewGen__required-group\">\n                        <div>\n                            <TextField\n                                label={'Name'}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value) }\n                            />\n                        </div>\n                        <div>\n                            <MaterialAutoComplete\n                                setError={setError}\n                                onChange={(e,v) => v ? addSeeds(v,'genre') : undefined}\n                                type=\"genre\"\n                                at={at}\n                                market={user.country}   \n                                label=\"Genres\" \n                            />\n                            <div className=\"NewGen__chips\">\n                                {makeChips(genres, 'genre')}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"NewGen__required-group\">\n                        <div>\n                            <MaterialAutoComplete\n                                setError={setError}\n                                onChange={(e,v) => v ? addSeeds({ id: v.id, name: v.name},'artist') : undefined}\n                                type=\"artist\"\n                                at={at}\n                                market={user.country}  \n                                label=\"Artists\"  \n                            />\n                            <div className=\"NewGen__chips\">\n                                {makeChips(artists, 'artist')}\n                            </div>\n                        </div>\n                        <div>\n                            <MaterialAutoComplete\n                                setError={setError}\n                                onChange={(e,v) => v ? addSeeds({ id: v.id, name: v.name},'track') : undefined}\n                                type=\"track\"\n                                at={at}\n                                market={user.country}    \n                                label=\"Tracks\"\n                            />\n                            <div className=\"NewGen__chips\">\n                                {makeChips(tracks, 'track')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Divider variant=\"middle\" />\n                <Tooltip title=\"Specify a minimum and maximum value for any of the following attributes. If min and max are the same, the value will be used as the target\">\n                    <Typography variant=\"h6\" component=\"div\" color=\"textSecondary\" style={{marginTop: '30px'}}>Optional Details</Typography>\n                </Tooltip>\n                <div className=\"NewGen__optional\">\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Number of Tracks'}\n                        value={limit}\n                        min={1}\n                        required={true}\n                        marks={[\n                            {\n                                value: 1,\n                                label: 1\n                            },\n                            {\n                                value: 20,\n                                label: 20\n                            },\n                            {\n                                value: 40,\n                                label: 40\n                            },\n                            {\n                                value: 60,\n                                label: 60\n                            },\n                            {\n                                value: 80,\n                                label: 80\n                            },\n                            {\n                                value: 100,\n                                label: 100\n                            }\n                        ]}\n                        description=\"defaults to 20\"\n                        onChange={(e,v) => setLimit(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'acousticness'}\n                        description=\"A measure of whether or not a track is recorded in the acoustic style, without electric amplification.\"\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'electric'\n                            },\n                            {\n                                value: 33,\n                                label: 'less electric'\n                            },\n                            {\n                                value: 66,\n                                label: 'more acoustic'\n                            },\n                            {\n                                value: 100,\n                                label: 'mostly acoustic'\n                            },\n                        ]}\n                        value={acousticness} \n                        onChange={(e,v) => setacousticness(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Danceability'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'dirge'\n                            },\n                            {\n                                value: 33,\n                                label: 'more danceable'\n                            },\n                            {\n                                value: 66,\n                                label: 'mostly danceable'\n                            },\n                            {\n                                value: 100,\n                                label: 'move it, move it'\n                            },\n                        ]}\n                        description=\"A measure of how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.\"\n                        value={danceability} \n                        onChange={(e,v) => setDanceability(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Energy'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'chill'\n                            },\n                            {\n                                value: 33,\n                                label: 'coffee shop'\n                            },\n                            {\n                                value: 66,\n                                label: 'pumped up'\n                            },\n                            {\n                                value: 100,\n                                label: 'rave'\n                            },\n                        ]}\n                        description=\"Represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy.\"\n                        value={energy} \n                        onChange={(e,v) => setEnergy(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Instrumentalness'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'contains vocals'\n                            },\n                            {\n                                value: 100,\n                                label: 'instrumental'\n                            }\n                        ]}\n                        description=\"Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context\"\n                        value={instrumentalness} \n                        onChange={(e,v) => setInstrumentalness(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"off\"\n                        title={'Key'}\n                        min={0}\n                        max={11}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'C'\n                            },\n                            {\n                                value: 1,\n                                label: 'C#'\n                            },\n                            {\n                                value: 2,\n                                label: 'D'\n                            },\n                            {\n                                value: 3,\n                                label: 'D#'\n                            },\n                            {\n                                value: 4,\n                                label: 'E'\n                            },\n                            {\n                                value: 5,\n                                label: 'F'\n                            },\n                            {\n                                value: 6,\n                                label: 'F#'\n                            },\n                            {\n                                value: 7,\n                                label: 'G'\n                            },\n                            {\n                                value: 8,\n                                label: 'G#'\n                            },\n                            {\n                                value: 9,\n                                label: 'A'\n                            },\n                            {\n                                value: 10,\n                                label: 'A#'\n                            },\n                            {\n                                value: 11,\n                                label: 'B'\n                            }\n                        ]}\n                        value={key} \n                        onChange={(e,v) => setKey(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Liveness'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'no audiance'\n                            },\n                            {\n                                value: 66,\n                                label: 'live recording'\n                            },\n                            {\n                                value: 100,\n                                label: 'large, excited audiance'\n                            }\n                        ]}\n                        description=\"Detects the presence of an audience in the recording. A value above 80 provides strong likelihood that the track is live.\"\n                        value={liveness} \n                        onChange={(e,v) => setLiveness(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Loudness'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'quiet'\n                            },\n                            {\n                                value: 100,\n                                label: 'loud'\n                            }\n                        ]}\n                        value={loudness} \n                        onChange={(e,v) => setLoudness(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        description=\"Speechiness detects the presence of spoken words in a track.\"\n                        title={'Speechiness'}\n                        value={speechiness}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'music',\n                            },\n                            {\n                                value: 33,\n                                label: 'music & speech',\n                            },\n                            {\n                                value: 66,\n                                label: 'mostly words',\n                            },\n                            {\n                                value: 100,\n                                label: 'all words',\n                            }\n                        ]}\n                        onChange={(e,v) => setSpeechiness(v)}\n                    />\n                <MaterialSlider\n                        title={'Duration'}\n                        description=\"The acceptable duration of selected tracks\"\n                        aria-labelledby=\"continuous-slider\"\n                        value={duration}\n                        max={100}\n                        valueLabelDisplay=\"off\"\n                        step={5}\n                        marks={[\n                                {\n                                  value: 10,\n                                  label: '1:00',\n                                },\n                                {\n                                  value: 20,\n                                  label: '2:00',\n                                },\n                                {\n                                  value: 30,\n                                  label: '3:00',\n                                },\n                                {\n                                  value: 40,\n                                  label: '4:00',\n                                },\n                                {\n                                value: 50,\n                                label: '5:00',\n                                },\n                                {\n                                value: 60,\n                                label: '6:00',\n                                },\n                                {\n                                value: 70,\n                                label: '7:00',\n                                },\n                                {\n                                value: 80,\n                                label: '8:00',\n                                },\n                                {\n                                value: 90,\n                                label: '9:00',\n                                },\n                                {\n                                value: 100,\n                                label: '10:00',\n                                },\n                              ]}\n                        onChange={(e,v) => setDuration(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Mode'}\n                        min={0}\n                        max={1}\n                        required={true}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'minor'\n                            },\n                            {\n                                value: 1,\n                                label: 'major'\n                            }\n                        ]}\n                        value={mode} \n                        onChange={(e,v) => setMode(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Popularity'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'obscure'\n                            },\n                            {\n                                value: 100,\n                                label: 'popular'\n                            }\n                        ]}\n                        value={popularity} \n                        onChange={(e,v) => setPopularity(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Tempo'}\n                        min={30}\n                        max={300}\n                        marks={[\n                            {\n                                value: 30,\n                                label: '30 BPM'\n                            },\n                            {\n                                value: 300,\n                                label: '300 BPM'\n                            }\n                        ]}\n                        value={tempo} \n                        onChange={(e,v) => setTempo(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"off\"\n                        title={'Time Signature'}\n                        min={2}\n                        max={12}\n                        step={null}\n                        marks={[\n                            {\n                                value: 2,\n                                label: '2/4'\n                            },\n                            {\n                                value: 3,\n                                label: '3/4'\n                            },\n                            {\n                                value: 4,\n                                label: '4/4'\n                            },\n                            {\n                                value: 5,\n                                label: '5/4'\n                            },\n                            {\n                                value: 6,\n                                label: '6/8'\n                            },\n                            {\n                                value: 9,\n                                label: '9/8'\n                            },\n                            {\n                                value: 12,\n                                label: '12/8'\n                            },\n                        ]}\n                        value={timeSig} \n                        onChange={(e,v) => setTimeSig(v)}\n                    />\n                    <MaterialSlider\n                        valueLabelDisplay=\"auto\"\n                        title={'Valence'}\n                        marks={[\n                            {\n                                value: 0,\n                                label: 'less happy'\n                            },\n                            {\n                                value: 100,\n                                label: 'most happy'\n                            }\n                        ]}\n                        value={valence} \n                        onChange={(e,v) => setValence(v)}\n                    />\n                </div>\n                <div className=\"NewGen__submit\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size='large'\n                        onClick={() => formIsValid() ? saveGenerator() : setError('Name, Artist(s), Genre(s), and Track(s) are required')}\n                    >\n                        Save Playlist Generator\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n  };\n\nexport default NewGenerator;","import React from 'react';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { \n    Tooltip,\n    IconButton,\n    Typography,\n\tDivider\n  } from '@material-ui/core/';\n\nconst Tracks = ({\n    tracks,\n    saveToSpotify,\n\tgetTracks,\n    at\n}) => {\n\n    const launchPlayer = (track) => {\n\n    }\n\n\tconst millisToMinutesAndSeconds = (millis) => {\n\t\tvar minutes = Math.floor(millis / 60000);\n\t\tvar seconds = ((millis % 60000) / 1000).toFixed(0);\n\t\treturn minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n\t  }\n\n    const renderTrack = (track) => (\n        <div className=\"Track\">\n            { track.is_playable && \n                <IconButton onClick={launchPlayer(track)} aria-label=\"delete\">\n                    <PlayArrowIcon color=\"primary\" />\n                </IconButton>\n            }\n\t\t\t<img src={track.album.images[2].url} alt=\"album artwork\" className=\"Track__albumArt\"/>\n\t\t\t<div className=\"Track__info\">\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant=\"p1\" component=\"h2\" color=\"textPrimary\">\n\t\t\t\t\t\t{track.name}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Tracks__artist\">\n\t\t\t\t\t{ track.explicit &&\n\t\t\t\t\t\t<div className=\"Tracks__explicit\">\n\t\t\t\t\t\t\tE\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Typography variant=\"p1\" component=\"h3\" color=\"textSecondary\">\n\t\t\t\t\t\t\t{track.artists[0].name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"Track__info\">\n\t\t\t\t<Typography variant=\"p1\" component=\"h3\" color=\"textSecondary\">\n\t\t\t\t\t{track.album.name}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div style={{flex: '.5'}}>\n\t\t\t\t<Typography variant=\"p1\" component=\"h3\" color=\"textSecondary\">\n\t\t\t\t\t{millisToMinutesAndSeconds(track.duration_ms)}\n\t\t\t\t</Typography>\n\t\t\t</div>\n        </div>\n    );\n\n    return (\n        <div className=\"NewGen__modal\">\n            <div className=\"NewGen__container\">\n\t\t\t\t<Tooltip title=\"Refresh your playlist with new tracks.\">\n\t\t\t\t\t<IconButton onClick={getTracks} aria-label=\"Refresh\">\n\t\t\t\t\t\t<CachedIcon color=\"primary\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Tooltip title=\"Save your playlist to your spotify account.\">\n\t\t\t\t\t<IconButton onClick={saveToSpotify} aria-label=\"Save\" size=\"large\">\n\t\t\t\t\t\t<SaveIcon color=\"primary\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t\t<div className=\"Track__header\">\n\t\t\t\t\t<div className=\"Track__header-item\">\n\t\t\t\t\t\t<Typography variant=\"p3\" component=\"p3\" color=\"textSecondary\">\n\t\t\t\t\t\t\tTrack\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Track__header-item\">\n\t\t\t\t\t\t<Typography variant=\"p3\" component=\"p3\" color=\"textSecondary\">\n\t\t\t\t\t\t\tAlbum\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{flex: '.5'}}>\n\t\t\t\t\t\t<Typography variant=\"p3\" component=\"p3\" color=\"textSecondary\">\n\t\t\t\t\t\t\t<ScheduleIcon disabled color=\"textPrimary\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Divider variant=\"middle\" />\n                {tracks.map(track => renderTrack(track))}\n            </div>\n        </div>\n    )\n}\n\nexport default Tracks;","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { \n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n  Modal,\n  Tooltip,\n  IconButton,\n} from '@material-ui/core/';\nimport Tracks from './Tracks';\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 320,\n    width: 320\n  },\n});\n\n const  GeneratorCard = ({\n    removeGenerator,\n    generator, // use custom hook and deep equals to properly rerender.\n    at,\n    setError,\n    edit,\n\tdiscover\n }) =>  {\n  const classes = useStyles();\n\n  const [tracks, setTracks] = useState(null);\n  // const [isLoading, setIsLoading] = useState(true);\n  const [artwork, setArtwork] = useState([]);\n  const [featuredArtists, setFeatured] = useState([]);\n  const [showTracks, setShowTracks] = useState(false);\n\n\n  const getTracks = async () => {\n    const tracks = await generator.run(at);\n    setTracks(tracks);\n    getArtwork(tracks[0].artists[0].href);\n    getArtwork(tracks[1].artists[0].href);\n    getArtwork(tracks[2].artists[0].href);\n    getArtwork(tracks[3].artists[0].href);\n  }\n\n  useEffect(() => {\n    if (generator && at) {\n      getTracks();\n    }\n  }, [generator, at]);\n\n  const toggleModal = () => setShowTracks((prev) => !prev);\n\n  const getArtwork = (href) => {\n    try {\n      fetch(href,{\n        headers: {\n          Authorization: 'Bearer ' + at\n        }\n      })\n      .then((response) => {\n        if(response.status > 300) {\n          throw response.error;\n        } else {\n          return response.json();\n        }\n      }).then((json) =>{\n        setArtwork((art) => [...art, json.images[2].url]);\n        setFeatured((artist) => [...artist, json.name]);\n      })\n    } catch(e) {\n      console.error(e);\n      setError(e);\n      return null;\n    }\n  }\n\n  const saveToSpotify = () => {\n    try {\n      fetch(`https://api.spotify.com/v1/users/${generator.user_id}/playlists`,{\n        method: 'POST',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Authorization': 'Bearer ' + at,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: `${generator.name} (from AutoPlaylistify)`})\n      }).then((response) => {\n        if (response.status > 300) {\n          throw response.error;\n        } \n        return response;\n      }).then((response) => response.json())\n      .then((json) => {\n        if (json.id) {\n          fetch(`https://api.spotify.com/v1/playlists/${json.id}/tracks`, {\n            method: 'POST',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Authorization': 'Bearer ' + at,\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              position: 0,\n              uris: tracks.map((track) => track.uri)\n            })\n          })\n        } else {\n          setError('Unable to save playlist');\n        }\n      })\n    } catch(e) {\n      console.log(e);\n      setError('Unable to save playlist');\n    }\n  }\n\n  const renderArt = (i) => (\n     <div className=\"GeneratorCard__images\" style={artwork[i] ? {backgroundImage: `url(${artwork[i]})`, backgroundSize: 'cover'} : {backgroundColor: 'grey'}} alt=\"Album Artwork\" />\n  )\n\n  const renderArtwork = () => (\n    <div style={{width: '386px'}}>\n      <div style={{display: 'flex'}}>\n        {renderArt(0)}\n        {renderArt(1)}\n      </div>\n      <div style={{display: 'flex'}}>\n        {renderArt(2)}\n        {renderArt(3)}\n      </div>\n    </div>\n  ) \n\n  const deleteGenerator = () => {\n    try {\n      fetch(`http://www.autoplaylistify.com/delete?id=${generator.id}`)\n      .then(response => response.json())\n      .then(json => {\n          if (json.error) {\n              throw json.error;\n          } else {\n            removeGenerator(generator.id);\n          }\n      })\n  } catch(e) {\n      setError(e);\n  }\n  }\n\n  return (\n    <div style={{paddingTop: '25px'}}>\n      <Card className={classes.root}>\n        <CardActionArea onClick={toggleModal}>\n          <CardMedia className={classes.media}>\n            {renderArtwork()}\n          </CardMedia>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {generator.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <div>\n                {`Inspired by: ${generator.seed_genres}`}\n              </div>\n              <div>\n                {`Featuring: ${featuredArtists[0]}, ${featuredArtists[1]}, ${featuredArtists[2]}, and more.`}\n              </div>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Tooltip title=\"Refresh your playlist with new tracks.\">\n            <IconButton onClick={getTracks} aria-label=\"Refresh\">\n              <CachedIcon color=\"primary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Save your playlist to your spotify account.\">\n            <IconButton onClick={saveToSpotify} aria-label=\"Save\">\n              <SaveIcon color=\"primary\" />\n            </IconButton>\n          </Tooltip>\n\t\t    {!discover &&\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Tooltip title=\"Schedule your playlist to refresh and save to your spotify account automatically. (still in development)\">\n\t\t\t\t\t\t<IconButton aria-label=\"Schedule\">\n\t\t\t\t\t\t<ScheduleIcon disabled color=\"primary\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Share this playlist with a friend (still in development)\">\n\t\t\t\t\t\t<IconButton aria-label=\"Share\">\n\t\t\t\t\t\t<ShareIcon color=\"primary\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Edit your playlist generator\">\n\t\t\t\t\t\t<IconButton onClick={() => edit(generator)} aria-label=\"Edit\">\n\t\t\t\t\t\t<EditIcon color=\"primary\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Delete your playlist generator\">\n\t\t\t\t\t\t<IconButton onClick={deleteGenerator}aria-label=\"delete\">\n\t\t\t\t\t\t<DeleteIcon color=\"primary\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</React.Fragment>\n \t\t\t}\n\t\t\t{ discover &&\n\t\t\t\t<Tooltip title=\"Copy this playlist to your Autoplaylistify account (still in development)\">\n\t\t\t\t\t<IconButton aria-label=\"copy\">\n\t\t\t\t\t<FileCopyIcon color=\"primary\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t}\n        </CardActions>\n      </Card>\n    <Modal \n      open={showTracks}\n      onBackdropClick={toggleModal}\n    > \n      <Tracks tracks={tracks} saveToSpotify={saveToSpotify} getTracks={getTracks} at={at}/>\n    </Modal>\n    </div>\n  );\n}\n\nexport default GeneratorCard;","import React from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst Search = ({\n    onKeyUp\n}) => (\n    <div className=\"Search\">\n        <div>\n        <SearchIcon />\n        </div>\n        <InputBase\n        placeholder=\"Search…\"\n        inputProps={{ 'aria-label': 'search' }}\n        />\n  </div>\n);\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport { Modal, Fab, Snackbar, Typography } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport NewGenerator from './NewGenerator';\nimport GeneratorCard from './GeneratorCard';\nimport Search from './Search';\nimport Generator from '../Generator';\n\nconst MainView = ({\n    hide,\n    user,\n    at,\n    setError\n}) => {\n    const [showNew, setShowNew] = useState(false);\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [generators, setGenerators] = useState(null);\n    const [genToEdit, setGenToEdit] = useState(null);\n\t\n\tconst fetchGenerators = async () => {\n\t\ttry {\n\t\t\tfetch(`http://www.autoplaylistify.com/generator?user_id=${user.id}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tif (json.error) {\n\t\t\t\t\tthrow json.error;\n\t\t\t\t} else {\n\t\t\t\t\tconst generators = [];\n\t\t\t\t\tfor (const gen in json) {\n\t\t\t\t\t\tconst g = new Generator({...json[gen], limit: json[gen].lim});\n\t\t\t\t\t\tif (!g.playlist) {\n\t\t\t\t\t\t\tg.run(at);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgenerators.push(g);\n\t\t\t\t\t}\n\t\t\t\t\tsetGenerators(generators)\n\t\t\t\t}\n\t\t\t})\n\t\t} catch(e) {\n\t\t\tsetError(e);\n\t\t}\n\t}\n\n\n    useEffect(() => {\n        if (user) {\n            fetchGenerators();\n        }\n    }, [user, setError]);\n\n    const removeGenerator = (id) => setGenerators((generators) => generators.filter((g) => g.id !== id));\n\n    const toggleModal = () => setShowNew((prev) => !prev);\n    const generatorCards = generators ? generators.map((gen => <GeneratorCard\n\t\tgenerator={gen}\n\t\tat={at}\n\t\tsetError={setError}\n\t\tremoveGenerator={removeGenerator}\n\t\tedit={() => { setGenToEdit(gen); toggleModal();}} \n\t\t/>))\n\t\t: null;\n    const NewGen = React.forwardRef((props, ref) => <NewGenerator  {...props} ref={ref} />)\n    if (hide) return null;\n    return (\n        <div className=\"Main\">\n            <div className=\"Main__activities\">\n                <Search /*filter gen cards by value here, pass onKeyUp*/ />\n                <Fab color=\"primary\" aria-label=\"add\" onClick={toggleModal}>\n                    <AddIcon/>\n                </Fab>\n            </div>\n            <div className=\"Main__GeneratorCards\">\n                {generatorCards ? generatorCards : \n                    <div className=\"Main__noGenerators\">\n                        <Typography variant=\"h4\" component=\"h2\" color=\"textSecondary\">\n                        Click the plus icon to get started.\n                        </Typography>\n                    </div>}\n            </div>\n            <Snackbar open={showSuccess} autoHideDuration={6000} onClose={() => setShowSuccess(false)}>\n                <MuiAlert elevation={6} variant=\"filled\" onClose={() => setShowSuccess(false)} severity=\"success\">\n                        Your playlist generator has been saved\n                </MuiAlert>\n            </Snackbar>\n            <Modal \n                open={showNew}\n                onBackdropClick={toggleModal}\n            >   \n                <NewGen at={at} user={user} setError={setError} fetchGenerators={fetchGenerators} exisitingGenerator={genToEdit}\n                closeSelf={\n                    () => {\n                        setShowNew(false);\n                        setShowSuccess(true);\n                        setGenToEdit(null);\n                    }\n                } />\n            </Modal>\n        </div>\n    );\n};\n\nexport default MainView;\n\n\n\n/**\n remaining todos/ bugs\n - reports (add create/modify time to generators) multiple columns, multiple rows, date-time stamp, and title\n - code including inheritance, polymorphism, and encapsulation\n - update deep equals on main activity\n - reauthentication on all auth endpoints\n * \n */\n\n","import React, { useState, useEffect }from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Generator from '../Generator';\nimport GeneratorCard from './GeneratorCard';\n\n const Discover = ({\n\tat,\n\tsetError\n }) => {\n\n\tconst [value, setValue] = useState(null);\n\tconst [debounceId, setDebounceId] = useState(null);\n\tconst [generators, setGenerators] = useState(null);\n\n\tconst fetchGenerators = async () => {\n\t\tif (value.length === 0) {\n\t\t\tsetError('Please add search query')\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tfetch(`http://www.autoplaylistify.com/generator?query=${value}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => {\n\t\t\t\tif (json.error) {\n\t\t\t\t\tthrow json.error;\n\t\t\t\t} else {\n\t\t\t\t\tconst generators = [];\n\t\t\t\t\tfor (const gen in json) {\n\t\t\t\t\t\tconst g = new Generator({...json[gen], limit: json[gen].lim});\n\t\t\t\t\t\tif (!g.playlist) {\n\t\t\t\t\t\t\tg.run(at);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgenerators.push(g);\n\t\t\t\t\t}\n\t\t\t\t\tsetGenerators(generators)\n\t\t\t\t}\n\t\t\t})\n\t\t} catch(e) {\n\t\t\tsetError(e);\n\t\t}\n\t}\n\n\tconst handleChange = (e) => {\n        setValue(e.target.value);\n    }\n\n\tconst generatorCards = generators ? generators.map((gen => <GeneratorCard\n\t\tgenerator={gen}\n\t\tat={at}\n\t\tsetError={setError}\n\t\tdiscover={true}\n\t\t/>))\n\t\t: null;\n\treturn (\n\t\t<div className=\"Discover\">\n\t\t\t<div className=\"Discover__field\">\n\t\t\t\t<TextField fullWidth value={value} onChange={handleChange} label=\"Discover\" />\n\t\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={fetchGenerators}>Search</Button>\n\t\t\t</div>\n\t\t\t<div className=\"Main__GeneratorCards\">\n\t\t\t\t{generatorCards}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Discover;","import React, { useState, useEffect }from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getContrastRatio, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n const Reports = ({setError}) => {\n\tconst [report, setReport] = useState(null);\n\n\tconst useStyles = makeStyles({\n\t\ttable: {\n\t\t  minWidth: 650,\n\t\t},\n\t  });\n\tconst classes = useStyles();\n\n\tconst getReports = async () => {\n\t\ttry {\n\t\t\tconst repo = await fetch('http://www.autoplaylistify.com/report')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.reportData) {\n\t\t\t\t\tlet r = json.reportData;\n\t\t\t\t\treturn r;\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn repo;\n\t\t} catch(e) {\n    \tconsole.error(e)\n    \t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst getrr = async () => {\n\t\t\tconst r = await getReports();\n\t\t\tconsole.log(r);\n\t\t\tsetReport(r);\n\t\t}\n\t\tgetrr();\n\t}, [setError])\n\n\tconst buildReport = () => {\n\t\tif (report) {\n\t\t\treturn (\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label=\"reports\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Generator Name</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">Creator Name</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">Created/Modified Time</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">Seed Artists</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">Seed Genres</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">Seed tracks</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t{Object.entries(report).map((row) => (\n\t\t\t\t\t\t<TableRow key={row.name + row.time}>\n\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t{row.generatorName}\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">{row.name}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">{row.time}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">{JSON.parse(row.seed_artists).map((artist) => artist.name).toString()}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">{JSON.parse(row.seed_genres).toString()}</TableCell>\n\t\t\t\t\t\t<TableCell align=\"right\">{JSON.parse(row.seed_tracks).map((artist) => artist.name).toString()}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst renderedReport =  buildReport();\n\treturn (\n\t\t<div className=\"Discover\">\n\t\t\t{report ? renderedReport : (\n\t\t\t\t<div>\n\t\t\t\t\t<CircularProgress color=\"primary\" />\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default Reports;","import React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header';\nimport Splash from './components/Splash';\nimport MainView from './components/MainView';\nimport Discover from './components/Discover';\nimport Reports from './components/Reports';\nimport { Paper } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { getUser } from './app-utils';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#55b53f',\n    },\n    secondary: {\n      main: '#b60edc',\n    },\n    background: {\n      default: '#3d2f3c',\n      paper: '#3d2f3c',\n    },\n    text: {\n      primary: '#ffffff',\n    },\n  },\n});\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n const App = () => {\n  const [user, setUser] = useState(null);\n  const [at, setAt] = useState(null);\n  const [rt, setRt] = useState(null);\n  const [ showError, setShowError ] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const user = await getUser(access_token, refresh_token);\n        setUser(user);   \n        if (user) {\n          fetch('http://www.autoplaylistify.com/user', {\n            method: 'POST',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify({...user, refresh_token: refresh_token})\n          }).then(response => response.json())\n          .then(json => {\n            if (!json.success) {\n              setError('failed to save user informaiton');\n            }\n          })\n        }    \n      } catch(e) {\n        setError(e);\n      }\n    }\n      const urlParams = new URLSearchParams(window.location.pathname);\n      const access_token = urlParams.get('/access_token');\n      const refresh_token = urlParams.get('refresh_token');\n      if (access_token) {\n        setAt(access_token);\n        setRt(refresh_token);\n        fetchUser(); \n      }\n  },[])\n\n  useEffect(() => {\n    if (!showError && error) {\n      setShowError(true);\n    }\n  }, [error, showError]);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(null);\n    setShowError(false);\n  };\n  \n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n\t  <Router>\n\t  \t<Paper>\n\t\t  <Header user={user} />\n\t\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Splash hide={user} />\n\t\t\t\t\t<MainView hide={!user} at={at} rt={rt} user={user} setError={setError}/> \n\t\t\t\t</React.Fragment>\n\t\t\t</Route>\n\t\t\t<Route path=\"/Discover\">\n\t\t\t\t<Discover at={at} setError={setError}/>\n\t\t\t</Route>\n\t\t\t<Route path=\"/Reporting\">\n\t\t\t\t<Reports setError={setError} />\n\t\t\t</Route>\n\t\t\t<Route>\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Splash hide={user} />\n\t\t\t\t\t<MainView hide={!user} at={at} rt={rt} user={user} setError={setError}/> \n\t\t\t\t</React.Fragment>\n\t\t\t</Route>\n\t\t\t</Switch>\n          \n            <Snackbar open={showError} autoHideDuration={6000} onClose={handleClose}>\n              <Alert onClose={handleClose} severity=\"error\">\n                {error}\n              </Alert>\n            </Snackbar>\n          </Paper>\n\t\t</Router>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}